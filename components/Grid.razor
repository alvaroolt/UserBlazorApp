@*@inherits ListUserBase*@
@using WebServiceApiRest.Models
@using UserBlazorApp.Services;

<SfGrid DataSource="LdocumentosEnum">
    <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple" PersistSelection="true"></GridSelectionSettings>
    <GridEditSettings NewRowPosition="NewRowPosition.Bottom"></GridEditSettings>
    <GridTemplates>
        <EmptyRecordTemplate>
            <span></span>
        </EmptyRecordTemplate>
    </GridTemplates>
    <GridColumns>
        <GridColumn Field="@(nameof(Ldocumentos.ldoc_cantidad))" />
        <GridColumn Field="@(nameof(Ldocumentos.ldoc_descripcion))" />
        <GridColumn Field="@(nameof(Ldocumentos.ldoc_importe_pvp))" />
        <GridColumn Field="@(nameof(Ldocumentos.ldoc_importe))" />
    </GridColumns>
</SfGrid>

@code {
    //[Inject]
    //public IServiceUser ServiceUser { get; set; }
    //public IEnumerable<User> Users { get; set; }
    //public IEnumerable<User> SelectedUsers { get; set; }

    [Inject]
    public IServiceComprobarSiExisteMesa ServiceComprobarSiExisteMesa { get; set; }
    public IEnumerable<Documentos> DocumentosEnum { get; set; }
    public IEnumerable<Ldocumentos> LdocumentosEnum { get; set; }
    public IEnumerable<Documentos> SelectedDocumentos { get; set; }

    //[Parameter]
    //public int Id { get; set; }

    [Parameter]
    public int orden { get; set; }

    //protected override async Task OnInitializedAsync()
    //{

    //}

    //OnParametersSetAsync se ejecuta cada vez que se actualiza el estado del componente
    protected override async Task OnParametersSetAsync()
    {
        //await getUsers(Id);
        await getDocumentos(orden);
        await base.OnParametersSetAsync();
    }

    //public async Task getUsers(int idCode)
    //{
    //    if (Id == 0)
    //    {
    //        //si el id es 0, obtiene la lista completa de usuarios
    //        Users = (await ServiceUser.DameUsers()).ToList();
    //    }
    //    else
    //    {
    //        //si no, obtiene una lista de un único usuario según el id que recibe
    //        Users = (await ServiceUser.DameUser(Id)).ToList();
    //    }
    //}

    public async Task getDocumentos(int ordenCode)
    {
        //string file = ServiceComprobarSiExisteMesa.DameDocumentos(26).ToString();
        DocumentosEnum = (await ServiceComprobarSiExisteMesa.DameDocumentos(ordenCode)).ToList();
        foreach (var documento in DocumentosEnum)
        {
            LdocumentosEnum = documento.listdoc;
        }
    }
}
