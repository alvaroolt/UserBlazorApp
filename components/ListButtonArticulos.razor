@using UserBlazorApp.components;
@using WebServiceApiRest.Models;
@using WebServiceApiRest.Models.Response;
@using System.Net.Http;
@using System.Net.Http.Json;
@inject HttpClient Http
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@* en caso de que la lista de artículos esté vacía, espera hasta que haya *@
@if (ArticulosEnum != null)
{
    <div class="contenedorlistbuttons">
        @foreach (Articulos art in ArticulosEnum)
        {
            string nombre;
            if (art.art_nom_corto.Length == 0)
            {
                nombre = art.art_nom_largo;
            }
            else
            {
                nombre = art.art_nom_corto; ;
            }
            <div class="collistbutton">
                <button class="listbutton" type="button" href="#" name="@art.art_id" @onclick="e => selectArticle(art.art_id)">@nombre</button>
            </div>
        }
    </div>
}

@code {
    // recibe el número de familia de ListButtonCategorias, necesario para realizar la solicitud HTTP y
    // obtener los artículos de esa familia
    [Parameter]
    public int numFam { get; set; }
    // pasa el id del artículo clicado al componente ListButtonCategorias
    [Parameter]
    public EventCallback<int> idArticuloToFather { get; set; }
    // Url necesaria para hacer solicitudes HTTP
    public string Url = "http://192.168.1.185:44322";
    // instancia de Respuesta que almacena una lista de artículos en su Data, para mostrárselos al usuario
    // y elegir qué artículo se añade al documento
    Respuesta<List<Articulos>> oRespuestaArticulos = new Respuesta<List<Articulos>>();
    // lista de artículos
    public IEnumerable<Articulos> ArticulosEnum { get; set; }

    // este método se ejecuta siempre en la carga inicial del componente
    protected override async Task OnParametersSetAsync()
    {
        await getArticulos();
        await base.OnParametersSetAsync();
    }

    // solicitud HTTP GET para obtener los artículos de la BD
    public async Task getArticulos()
    {
        oRespuestaArticulos = await Http.GetFromJsonAsync<Respuesta<List<Articulos>>>(Url + "/api/Articulos/" + numFam);
        ArticulosEnum = (IEnumerable<Articulos>)oRespuestaArticulos.Data;
    }

    // envía el id del artículo escogido al componente ListButtonCategorias
    private void selectArticle(int idArticulo)
    {
        idArticuloToFather.InvokeAsync(idArticulo);
    }
}
