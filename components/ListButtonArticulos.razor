@*<h3>ListButtonCategorias</h3>*@

@using UserBlazorApp.components;
@using WebServiceApiRest.Models;
@using WebServiceApiRest.Models.Response;
@using System.Net.Http;
@using System.Net.Http.Json;
@inject HttpClient Http
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@if (ArticulosEnum != null)
{
    <div class="contenedorlistbuttons">
        @foreach (Articulos art in ArticulosEnum)
        {
            string nombre;
            if (art.art_nom_corto.Length == 0)
            {
                nombre = art.art_nom_largo;
            }
            else
            {
                nombre = art.art_nom_corto; ;
            }
            <div class="collistbutton">
                <button class="listbutton" type="button" href="#" name="@art.art_id" @onclick="e => selectArticle(art.art_id)">@nombre</button>
            </div>
        }
    </div>
}

@code {
    [Parameter]
    public int numFam { get; set; }

    [Parameter]
    public EventCallback<int> idArticuloToFather { get; set; }

    public string Url = "https://localhost:44322";
    Respuesta<List<Articulos>> oRespuestaArticulos = new Respuesta<List<Articulos>>();

    public IEnumerable<Articulos> ArticulosEnum { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await getArticulos();
        await base.OnParametersSetAsync();
    }

    public async Task getArticulos()
    {
        oRespuestaArticulos = await Http.GetFromJsonAsync<Respuesta<List<Articulos>>>(Url + "/api/Articulos/" + numFam);
        ArticulosEnum = (IEnumerable<Articulos>)oRespuestaArticulos.Data;
    }

    private void selectArticle(int idArticulo)
    {
        idArticuloToFather.InvokeAsync(idArticulo);

        //Articulos objArticulo = ArticulosEnum.FirstOrDefault(x => x.art_id == idArticulo);
        //IEnumerable<Documentos> objDocumento = await localStorage.GetItemAsync<IEnumerable<Documentos>>("LSdocumento");

        //int idDocumento = 0;
        //int numMesa = 0;
        //int idTerminal = await localStorage.GetItemAsync<int>("idTerminal");
        //int idUsuario = await sessionStorage.GetItemAsync<int>("usuario");
        //foreach (var item in objDocumento)
        //{
        //    idDocumento = (int)item.doc_id;
        //    numMesa = item.doc_mesa;
        //}

        //Ldocumentos objLdocumento = new Ldocumentos();
        //objLdocumento.ldoc_doc_id = idDocumento;
        //objLdocumento.ldoc_tipo = "A";
        //objLdocumento.ldoc_linea = ;
        //objLdocumento.ldoc_art_id = idArticulo;
        //objLdocumento.ldoc_descripcion = objArticulo.art_nom;
        //objLdocumento.ldoc_cantidad = 1;
        //objLdocumento.ldoc_importe_pvp = 0;
        //objLdocumento.ldoc_dto = 0;
        //objLdocumento.ldoc_cdto = 0;
        //objLdocumento.ldoc_importe = 0;
        //objLdocumento.ldoc_importe_pvp = 0;
        //objLdocumento.ldoc_iva = 0;
        //objLdocumento.ldoc_civa = 0;
        //objLdocumento.ldoc_tipo_iva = objArticulo.art_tipo_iva;
        //objLdocumento.ldoc_cant_prn = 1;
        //objLdocumento.ldoc_ter_id = idTerminal;
        //objLdocumento.ldoc_varia_notas = null;
        //objLdocumento.ldoc_err_prn = 1;
        //objLdocumento.ldoc_usuario = idUsuario;

        //objldocumento.
    }
}
